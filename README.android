The source code of clang-8.0.0 was downloaded from
http://releases.llvm.org/8.0.0/cfe-8.0.0.src.tar.xz

To build clang-8.0.0 for Android we first need to build clang-tblgen and
llvm-tblgen code generators. Both require subset of clang and llvm codebase
that does not require any of the  generated code.

In order to build clang8 with Android build system we need to provide header
files that are generated by cmake when generating build files. The easiest
way to do so is to run cmake and copy created headers:
1. Copy sources of llvm-8.0.0 to $SOURCES_DIR/llvm and sources of clang-8.0.0 to
   $SOURCES_DIR/clang
2. Create $HOST_BUILD_DIRECTORY and build cmake-tblgen and llvm-tblgen for host:
   cd $HOST_BUILD_DIRECTORY
   cmake $SOURCES_DIR/llvm/ -DLLVM_ENABLE_PROJECTS=clang
   make llvm-tblgen clang-tblgen
3. Setup standalone ndk to be used with cmake. Create cmake toolchain file which
   might look as follows:
   ```
   set(CMAKE_SYSTEM_NAME Android)
   set(CMAKE_SYSTEM_VERSION 28)
   set(CMAKE_ANDROID_STANDALONE_TOOLCHAIN <standalone toolchain path>)
   set(CMAKE_ANDROID_ARCH_ABI arm64-v8a)
   ```
   Path of the file will be referred to as TOOLCHAIN_FILE.
4. Create $ANDROID_BUILD_DIRECTORY and generate build (and header) files there
   cd $ANDROID_BUILD_DIRECTORY
   cmake $SOURCES_DIR/llvm/ \
       -DLLVM_ENABLE_PROJECTS=clang \
       -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE \
       -DLLVM_TABLEGEN=$HOST_BUILD_DIRECTORY/bin/llvm-tblgen \
       -DCLANG_TABLEGEN=$HOST_BUILD_DIRECTORY/bin/clang-tblgen
5. Copy headers (*.h, *.inc) generated in $ANDROID_BUILD_DIR/tools/clang/include
   to device directory in this repo.
